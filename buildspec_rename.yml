version: 0.2

phases:
  install:
    commands:
      - echo "Installing Docker dependencies..."
      - apt-get update -y && apt-get install -y docker.io

  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com

  build:
    commands:
      - echo "Building Docker image..."
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG

<<<<<<< HEAD:buildspec_rename.yml
artifacts:
  files:
<<<<<<< HEAD
    - "**/*"  # Output all files (customize as needed)
=======
    - "**/*"  # Output all files (customize as needed)
>>>>>>> e89249e42140fd9d5a418955b386a88e752a06b8
=======
  post_build:
    commands:
      - echo "Pushing Docker image to ECR..."
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo "Image URI: $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG"

env:
  variables:
    IMAGE_REPO_NAME: "my-app-repo"  # Your ECR repository name
    IMAGE_TAG: "latest"             # Or use $CODEBUILD_RESOLVED_SOURCE_VERSION for Git commit hash
>>>>>>> 06511bdaa946b95af1e68a3b32b54e897f6398d7:buildspec.yml
